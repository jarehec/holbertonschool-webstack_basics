>>> add_integer = __import__('13-add_integer').add_integer

>>> print(add_integer(1, 2))
3

>>> print(add_integer(-101, -3))
-104

>>> print(add_integer(100, -2))
98

>>> print(add_integer(100.3, -2))
98

>>> print(add_integer(2**2.1, 2))
6

>>> print(add_integer(-8.0, 8))
0

>>> try:
...     print(add_integer(4, "School"))
... except Exception as e:
...     print(e)
b must be an integer

>>> print(add_integer("Hello", -1))
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> print(add_integer(None, None))
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> print(add_integer(True, None))
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> print(add_integer(1, True))
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> print(add_integer({}, []))
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> print(add_integer(1, {}))
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> print(add_integer(1, []))
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> print(add_integer([], True))
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> print(add_integer((), True))
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> print(add_integer(-1, ()))
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> print(add_integer())
Traceback (most recent call last):
...
TypeError: add_integer() missing 2 required positional arguments: 'a' and 'b'

>>> print(add_integer(-1))
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'b'
